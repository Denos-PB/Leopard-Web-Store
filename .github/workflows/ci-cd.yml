name: Leopard Web Store CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-windows:
    name: Test on Windows
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage

    - name: Run Django migrations
      working-directory: ./Leopard_Web_Store
      run: |
        python manage.py migrate
      env:
        SECRET_KEY: test-secret-key-123
        DEBUG: "True"

    - name: Run Django tests
      working-directory: ./Leopard_Web_Store
      run: |
        python manage.py test
      env:
        SECRET_KEY: test-secret-key-123
        DEBUG: "True"

    - name: Check if frontend exists and test
      working-directory: ./Leopard_Web_Store
      run: |
        if (Test-Path package.json) { 
          npm install
          npm run build --if-present
          npm test --if-present
        } else {
          Write-Host "No frontend package.json found - skipping frontend tests"
        }
      shell: pwsh

  test-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage

    - name: Run Django migrations
      working-directory: ./Leopard_Web_Store
      run: |
        python manage.py migrate
      env:
        SECRET_KEY: test-secret-key-123
        DEBUG: "True"

    - name: Run Django tests
      working-directory: ./Leopard_Web_Store
      run: |
        python manage.py test
      env:
        SECRET_KEY: test-secret-key-123
        DEBUG: "True"

    - name: Check if frontend exists and test
      working-directory: ./Leopard_Web_Store
      run: |
        if [ -f package.json ]; then
          npm install
          npm run build --if-present
          npm test --if-present
        else
          echo "No frontend package.json found - skipping frontend tests"
        fi

  deploy:
    name: Deploy to Ubuntu Server
    runs-on: ubuntu-latest
    needs: [test-windows, test-ubuntu]
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          cd /home/${{ secrets.SSH_USERNAME }}/leopard-Web-Store
          git pull origin main
          pip install -r requirements.txt
          python manage.py migrate
          python manage.py collectstatic --noinput
          sudo systemctl restart leopard-web-store
          echo "Deployment completed successfully!"