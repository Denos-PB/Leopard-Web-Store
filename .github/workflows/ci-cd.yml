name: Leopard Web Store CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t leopard-web-store .

    - name: Run tests in Docker
      run: docker run --rm -e SECRET_KEY=test-secret-key-123 -e DEBUG=True leopard-web-store python manage.py test

    - name: Check if frontend exists and test
      run: |
        if [ -f package.json ]; then
          npm install
          npm run build --if-present
          npm test --if-present
        else
          echo "No frontend package.json found - skipping frontend tests"
        fi

  deploy:
    name: Deploy to Server with Docker
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        push: false  # Якщо хочете пушити в Docker Hub, змініть на true і додайте логін
        tags: leopard-web-store:latest

    - name: Deploy via SSH with Docker
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /home/${{ secrets.SSH_USERNAME }}/leopard-web-store
          git pull origin main
          docker build -t leopard-web-store .
          docker stop leopard-web-store || true
          docker rm leopard-web-store || true
          docker run -d --name leopard-web-store -p 8000:8000 \
            -e SECRET_KEY=${{ secrets.SECRET_KEY }} \
            -e DEBUG=False \
            leopard-web-store
          echo "Deployment completed successfully!"