name: Leopard Web Store CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test-windows:
    name: Test on Windows
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Django tests (Windows)
      working-directory: ./Leopard_Web_Store
      run: |
        python manage.py test
      env:
        SECRET_KEY: test-secret-key-123
        DEBUG: "True"

  test-ubuntu:
    name: Test on Ubuntu
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Django tests (Linux)
      working-directory: ./Leopard_Web_Store
      run: |
        python manage.py test
      env:
        SECRET_KEY: test-secret-key-123
        DEBUG: "True"

  deploy-ssh:
    name: Deploy via SSH
    runs-on: ubuntu-latest
    needs: [ test-windows, test-ubuntu ]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH and deploy
        run: |
          set -x  # –î–µ—Ç–∞–ª—å–Ω–∏–π –≤–∏–≤—ñ–¥ –¥–ª—è –¥–µ–±–∞–≥–≥—ñ–Ω–≥y
          
          # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ SSH
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          
          # –ó–∞–ø–∏—Å—É—î–º–æ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          
          # –î–æ–¥–∞—î–º–æ —Ö–æ—Å—Ç –¥–æ known_hosts
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || true
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–ª—é—á
          echo "üîë –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ SSH –∫–ª—é—á–∞:"
          ls -la ~/.ssh/
          head -2 ~/.ssh/id_ed25519
          
          # –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
          echo "üîç –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞..."
          ssh -o ConnectTimeout=10 -o StrictHostKeyChecking=no -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "echo '‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–µ!'" || echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è"
          
          # –î–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ SSH
          echo "üöÄ –ü–æ—á–∞—Ç–æ–∫ –¥–µ–ø–ª–æ—é —á–µ—Ä–µ–∑ SSH..."
          ssh -o ConnectTimeout=30 -i ~/.ssh/id_ed25519 ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e  # –ó—É–ø–∏–Ω–∏—Ç–∏—Å—è –ø—Ä–∏ –ø–µ—Ä—à—ñ–π –ø–æ–º–∏–ª—Ü—ñ
            set -x  # –î–µ—Ç–∞–ª—å–Ω–∏–π –≤–∏–≤—ñ–¥
          
            echo "üìÅ –ü–µ—Ä–µ—Ö–æ–∂—É –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç—É..."
            cd /home/dima/Projects/Leopard-Web-Store || { echo "‚ùå –ü–∞–ø–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"; exit 1; }
          
            echo "üîÑ –û–Ω–æ–≤–ª—é—é –∫–æ–¥ –∑ Git..."
            git pull origin main || { echo "‚ùå –ü–æ–º–∏–ª–∫–∞ Git pull"; exit 1; }
          
            echo "üêç –ê–∫—Ç–∏–≤—É—é –≤—ñ—Ä—Ç—É–∞–ª—å–Ω–µ –æ—Ç–æ—á–µ–Ω–Ω—è..."
            source .venv/bin/activate || { echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü—ñ—ó venv"; exit 1; }
          
            echo "üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª—é—é –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ..."
            pip install -r requirements.txt || { echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"; exit 1; }
          
            echo "üìÅ –ü–µ—Ä–µ—Ö–æ–∂—É –≤ –ø–∞–ø–∫—É Django –ø—Ä–æ–µ–∫—Ç—É..."
            cd Leopard_Web_Store || { echo "‚ùå –ü–∞–ø–∫–∞ Leopard_Web_Store –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"; exit 1; }
          
            echo "üóÉÔ∏è –í–∏–∫–æ–Ω—É—é –º—ñ–≥—Ä–∞—Ü—ñ—ó..."
            python manage.py migrate || { echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –º—ñ–≥—Ä–∞—Ü—ñ–π"; exit 1; }
          
            echo "üìä –ó–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—á–Ω—ñ —Ñ–∞–π–ª–∏..."
            python manage.py collectstatic --noinput || { echo "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–æ—Ä—É —Å—Ç–∞—Ç–∏–∫–∏"; exit 1; }
          
            echo "üõë –ó—É–ø–∏–Ω—è—é —Å—Ç–∞—Ä–∏–π —Å–µ—Ä–≤–µ—Ä..."
            pkill -f "python manage.py runserver" || echo "‚ÑπÔ∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –±—É–≤ –∑–∞–ø—É—â–µ–Ω–∏–π"
          
            echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –Ω–æ–≤–∏–π —Å–µ—Ä–≤–µ—Ä..."
            nohup python manage.py runserver 0.0.0.0:8000 > server.log 2>&1 &
          
            echo "‚è≥ –ß–µ–∫–∞—é 3 —Å–µ–∫—É–Ω–¥–∏..."
            sleep 3
          
            echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—é —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞..."
            ps aux | grep "python manage.py runserver" | grep -v grep && echo "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π" || echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π"
          
            echo "üéâ –î–µ–ø–ª–æ–π —É—Å–ø—ñ—à–Ω–∏–π!"
          EOF